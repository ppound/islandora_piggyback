<?xml version="1.0" encoding="UTF-8"?>

<project name="islandora_piggyback" default="build">
    <target name="build" depends="clean,prepare,php-eval,lint,phploc,code_sniff,phpcpd,pdepend,doxygen,phpcb,test,cc-process,cc-export" />

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/test" />
        <delete dir="${basedir}/build/logs" />
        <delete dir="${basedir}/build/pdepend" />
        <delete dir="${basedir}/build/api" />
        <delete dir="${basedir}/build/code-browser" />
        <delete dir="${basedir}/build/code_coverage" />
    </target>

    <target name="prepare" description="Prepares workspace for artifacts" >
        <mkdir dir="${basedir}/build/test" />
        <mkdir dir="${basedir}/build/logs" />
        <mkdir dir="${basedir}/build/pdepend" />
        <mkdir dir="${basedir}/build/api" />
        <mkdir dir="${basedir}/build/code-browser" />
        <mkdir dir="${basedir}/build/code_coverage" />
    </target>

    <target name="php-eval" description="Use php-eval to set the code_coverage_filter_files variable">
        <exec executable="drush">
            <arg line="php-eval &quot;variable_set('code_coverage_files', array('sites/all/modules/islandora_piggybackp/islandora_piggyback.install', 'sites/all/modules/islandora_piggyback/islandora_piggyback.module', 'sites/all/modules/islandora_piggyback/includes/custom_solr_results.inc',)); variable_set('code_coverage_modules', array());&quot;"/>
        </exec>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l" />

            <fileset dir="${basedir}">
                <include name="**/*.php" />
                <include name="**/*.inc" />
                <include name="**/*.module" />
                <include name="**/*.install" />
                <include name="**/*.test" />
                <modified />
            </fileset>
        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg line="--log-csv ${basedir}/build/logs/phploc.csv --exclude build --exclude images --exclude css --names *.php,*.module,*.inc,*.test,*.install ${basedir}" />
        </exec>
    </target>

    <target name="code_sniff" description="Checks the code for Drupal coding standard violations" >
        <exec executable="phpcs">
            <arg line="--standard=Drupal --report=checkstyle --report-file=${basedir}/build/logs/checkstyle.xml --extensions=php,inc,test,module,install --ignore=build/,images/,css/ ${basedir}" />
        </exec>
    </target>

    <target name="phpcpd" description="Copy/Paste code detection">
        <exec executable="phpcpd">
            <arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml --exclude build --exclude images --exclude css --names *.php,*.module,*.inc,*.test,*.install ${basedir}" />
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg line="--jdepend-xml=${basedir}/build/logs/jdepend.xml --jdepend-chart=${basedir}/build/pdepend/dependencies.svg --overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg ${basedir}"/>
        </exec>
    </target>

    <target name="doxygen" description="Generate API documentation with doxygen" depends="prepare">
        <exec executable="bash">
            <arg line='-c "sed -i s/PROJECT_NUMBER\ \ \ \ \ \ \ \ \ =/PROJECT_NUMBER\ \ \ \ \ \ \ \ \ =\ `git log -1 --pretty=format:%h`/ build/Doxyfile"'/>
        </exec>
        <exec executable="doxygen">
            <arg line="${basedir}/build/Doxyfile" />
        </exec>
        <exec executable="git">
            <arg line="checkout ${basedir}/build/Doxyfile"/>
        </exec>
    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg line="--log ${basedir}/build/logs --source ${basedir} --output ${basedir}/build/code-browser"/>
        </exec>
    </target>

    <target name="test">
        <exec executable="drush">
            <arg line="test-run --uri=http://localhost --xml=${basedir}/build/test 'Islandora Piggyback'" />
        </exec>
    </target>

    <target name="cc-process" description="Processes the code coverage output so it can be exported">
        <exec executable="drush">
            <arg line="cc-process all"/>
        </exec>
    </target>

    <target name="cc-export" description="Generate a code coverage report for the simpletest run">
        <exec executable="drush">
            <arg line="cc-export latest --html --csv --tag-html --generate-index --path=${basedir}/build/code_coverage"/>
        </exec>
    </target>

</project>